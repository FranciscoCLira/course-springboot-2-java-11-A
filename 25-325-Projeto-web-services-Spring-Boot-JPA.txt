
Curso Java COMPLETO 
D:/BRQ/Udemy/Curso%20Java/25-325-Projeto-web-services-Spring-Boot-JPA.pdf


Projeto web services com Spring Boot e JPA / Hibernate
Objetivos
? Criar projeto Spring Boot Java:  c:/temp/ws-sts/course
? Implementar modelo de domínio
? Estruturar camadas lógicas: resource, service, repository
? Configurar banco de dados de teste (H2)
? Povoar o banco de dados
? CRUD - Create, Retrieve, Update, Delete
? Tratamento de exceções
Github:
https://github.com/acenelio/workshop-springboot2-jpa


user.name=Francisco Casemiro Lira
user.email=franciscoclira@hotmail.com


==> New Spring Starter Project Dependencies ==> usando Spring Boot Version 2.1.7  - Java 11 


Abrir git bash: 

Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course
$ git init
Initialized empty Git repository in C:/temp/ws-sts/course/.git/

Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (main)
$ git . 
$ git config --global user.email "franciscoclira@hotmail.com"

--> criar o projeto no github na web e depois de criar copia a linha abaixo para o git bash:  
$ git remote add origin git@github.com:FranciscoCLira/course-springboot-2-java-11.git

Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (main)
$ git add . 
$ git commit -m "Project created"
$ git push

$ git remote add git@github.com:FranciscoCLira/course-springboot-2-java-11.git
$ git commit -m "User entity and resource -versao-2"
$ git push

==============================================================================
NOVO REPOSITORIO GIT: 
Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (master)
$ git init
Reinitialized existing Git repository in C:/temp/ws-sts/course/.git/

git remote add origin git@github.com:FranciscoCLira/course-springboot-2-java-11-A.git
git push -u origin master


$ git add . 
$ git commit -m "Project created & User entity and resource"
$ git push


=========================================================
Como apontar o projeto para outro repositório remoto
git remote set-url origin git@github.com:seuusuario/seurepositorio.git
git remote set-url origin git@github.com:FranciscoCLira/course-springboot-2-java-11-A.git



Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (master)
$ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using
    git remote add <name> <url>
and then push using the remote name
    git push <name>


Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (master)
$ git remote add git@github.com:FranciscoCLira/course-springboot-2-java-11.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


=========================================================





http://localhost:8080/users

{"id":1,"name":"Maria","email":"maria@gmail.com","phone":"9999999","password":"12345"}

Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (master)
$ git add .
$ git commit -m "User entity and resource"
$ git push


Desfazer último commit sem desfazer as modificações nos arquivos:
git status 
git reset --soft HEAD~1


Instalar banco de dados em memoria: 
"H2 database, test profile, JPA" 


incluir as dependencias no arquivo pom.xml 

application-test.properties:
spring.datasource.url=jdbc:h2:mem:testdb  ==>  mem = banco de dados criado em memoria 


===================

…or create a new repository on the command line

echo "# course-springboot-2-java-11" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M master
git remote add origin git@github.com:FranciscoCLira/course-springboot-2-java-11.git
git push -u origin master


…or push an existing repository from the command line

git remote add origin git@github.com:FranciscoCLira/course-springboot-2-java-11.git
git branch -M master
git push -u origin master



Reserved words
http://www.h2database.com/html/advanced.html



Anotation - @Transient  é para o compilardor ignorar, exemplo: 
	@Transient
	private Set<Product> products = new HashSet<>();

    
https://www.udemy.com/course/java-curso-completo/learn/lecture/15989010#search


Segue o link da live: OO e List em Java - Aulão #003
https://youtu.be/Xj-osdBe3TE


grupo no Discord, lá tem outros alunos e vocês podem trocar conhecimentos:
https://discord.gg/SbjpsFv


Para mais informações sobre esse tipo de problema, sempre lembrem de consultar o bom e velho Stackoverflow:
https://stackoverflow.com/questions/47457105/class-has-been-compiled-by-a-more-recent-version-of-the-java-environment


============================================================


Teste:    Postman: PUT  http://localhost:8080/users/7 -  alterar um user inexistente. 

Exception handling - update
Checklist:
    UserService
    EntityNotFoundException

UserService class  -  
...
	public User update(Long id, User obj) {
		try {
			User entity = repository.getOne(id);
			updateData(entity, obj);
		ç	return repository.save(entity);
		} catch (RuntimeException e) {
			e.printStackTrace();           ===>  incluido apenas para teste, capturar a exception class: EntityNotFoundException
			throw new ResourceNotFoundException(id);
		}

============================================================

"Create Heroku app  & provision PostgreSQL   (course-javasb-flira)"
==========================================

Cloud Application Platform

Aula: Install local PostgreSQL 
: https://www.postgresql.org/download/
 
 Super user: postgres
 Password: vide material de apoio
 Port: 5432 
 
 
 Dev profile: 
 ===========
 Arquivo 
 aplication.properties 
 spring.profiles.active=test   ==> alterar de test para dev

spring.jpa.open-in-view=true

=====



Backup pgAdmin 


C:\Users\Samsung\pg_dump.exe

C:\Program Files\PostgreSQL\14\bin
C:\Program Files\PostgreSQL\14\bin\pg_dump.exe

C:\Users\Samsung\

Criado arquivo script de backup pelo pgAdmim => backup 

C:\temp\script.sql


https://dashboard.heroku.com/apps/course-javasb-flira/settings 

Config vars:
                           senha - vide site
postgres://zijqfgsuwccvfi:(8d2f36af96807e9.......763b92b0a6a41d50fff5b85)@ec2-107-22-122-106.compute-1.amazonaws.com:5432/d14sg92a7d4to

destrinchando: 

User: zijqfgsuwccvfi

password: (vide site)

server: ec2-107-22-122-106.compute-1.amazonaws.com

port: 5432

database: d14sg92a7d4to


==================================================================

Deploy no Heroku 

copiar de https://dashboard.heroku.com/apps/course-javasb-flira/deploy/heroku-git
    create a new git repository: 
      heroku git:remote -a course-javasb-flira

Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (master)
$ heroku git:remote -a course-javasb-flira
set git remote heroku to https://git.heroku.com/course-javasb-flira.git

Para testar se funcionou:

Samsung@LAPTOP-9P7FQEU6 MINGW64 /c/temp/ws-sts/course (master)
$ git remote -v
heroku  https://git.heroku.com/course-javasb-flira.git (fetch)
heroku  https://git.heroku.com/course-javasb-flira.git (push)
origin  git@github.com:FranciscoCLira/course-springboot-2-java-11-A.git (fetch)
origin  git@github.com:FranciscoCLira/course-springboot-2-java-11-A.git (push)


Na classe aplication.properties 
spring.profiles.active=dev  ==> alterar de dev para prod

Agora fazer git para hiroku  